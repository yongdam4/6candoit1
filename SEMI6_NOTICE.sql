-- 테이블 전체 제거

DROP TABLE NOTICE;
DROP TABLE PRODUCT;
DROP TABLE PAYMENT;
DROP TABLE COUPON_MAPPING;
DROP TABLE COUPON;
DROP TABLE CATEGORY;
DROP TABLE MEMBER;

-- 테이블 생성

-- 테이블 생성 시 forin key 제외한 나머지 제약조건이 있는 컬럼에 constraint 추가하기

CREATE TABLE NOTICE( --문의게시판 테이블 생성
    UC_NO NUMBER CONSTRAINT UC_NO_PK PRIMARY KEY, 
    USER_ID VARCHAR2(30) UNIQUE NOT NULL,
    PRODUCT_CODE VARCHAR2(30) UNIQUE NOT NULL,
    UC_TITLE VARCHAR2(50) CONSTRAINT UC_TITLE_NN NOT NULL, 
    UC_WRITEDATE DATE DEFAULT SYSDATE, 
    ASK_DETAIL VARCHAR2(2000), 
    ASK_COMMENT VARCHAR2(1000) 
);

CREATE TABLE PRODUCT( -- 상품 테이블 생성
    PRODUCT_CODE VARCHAR2(30) CONSTRAINT PRODUCT_CODE_PK PRIMARY KEY,
    CATEGORY_CODE VARCHAR2(30) NOT NULL,
    PRODUCT_NAME VARCHAR2(30) CONSTRAINT PRODUCT_NAME_UQ UNIQUE NOT NULL, 
    PRODUCT_PRICE NUMBER CONSTRAINT PRODUCT_PRICE_NN NOT NULL,
    PRODUCT_DESCRIPTION VARCHAR2(1000), 
    PRODUCT_QUANTITY NUMBER 
);

CREATE TABLE CATEGORY( -- 카테고리 테이블 생성
    CATEGORY_CODE NUMBER CONSTRAINT CATEGORY_CODE_PK PRIMARY KEY, 
    CATEGORY_NAME VARCHAR2(30) CONSTRAINT CATEGORY_NAME_UQ UNIQUE NOT NULL
);

CREATE TABLE PAYMENT( -- 결제 테이블 생성
    ORDER_NO NUMBER CONSTRAINT ORDER_NO_PK PRIMARY KEY, 
    USER_ID VARCHAR2(30) NOT NULL,  -- UNIQUE 제약 조건 제거
    PRODUCT_CODE VARCHAR2(30) CONSTRAINT PRODUCT_CODE_FK REFERENCES PRODUCT(PRODUCT_CODE) ON DELETE CASCADE,
    PRODUCT_NAME VARCHAR2(30) NOT NULL, 
    ORDER_CODE VARCHAR2(30) CONSTRAINT ORDER_CODE_UQ UNIQUE NOT NULL,
    ORDER_DATE DATE DEFAULT SYSDATE,
    ORDER_QUANTITY NUMBER NOT NULL, 
    ORDER_PRICE NUMBER NOT NULL,
    DELIVERY_STATUS VARCHAR2(30),  -- 배송 상태 추가
    PAYMENT_METHOD VARCHAR2(30)     -- 결제 방법 추가
);


CREATE TABLE MEMBER( -- 회원 테이블 생성
    USER_ID VARCHAR2(20) CONSTRAINT USER_ID_PK PRIMARY KEY, 
    USER_PWD VARCHAR2(100) CONSTRAINT USER_PWD_UQ UNIQUE NOT NULL, 
    USER_NAME VARCHAR2(20) CONSTRAINT USER_NAME_UQ UNIQUE NOT NULL, 
    GENDER CHAR(3) CONSTRAINT GENDER_CK CHECK(GENDER IN ('F', 'M')), 
    USER_BIRTHDAY VARCHAR2(100), 
    USER_EMAIL VARCHAR2(30), 
    USER_PHONE VARCHAR2(20) CONSTRAINT USER_PHONE_NN  NOT NULL,
    USER_ENROLL_DATE DATE DEFAULT SYSDATE, 
    USER_DELFLAG CHAR(1) DEFAULT 'N' CONSTRAINT USER_DELFLAG_CK CHECK(USER_DELFLAG IN ('Y', 'N')),
    USER_DELETE_DATE DATE, 
    USER_GRADE VARCHAR2(15),
    USER_ADDRESS VARCHAR2(100) CONSTRAINT USER_ADDRESS_NN NOT NULL,
    GRADE_ADMIN VARCHAR2(20), 
    USER_COIN NUMBER 
);

CREATE TABLE COUPON_MAPPING( -- 쿠폰매핑 테이블 생성
    USER_COUPON VARCHAR2(30) CONSTRAINT USER_COUPON_PK PRIMARY KEY,
    USER_ID VARCHAR2(30) UNIQUE NOT NULL,
    COUPON_ID VARCHAR2(30) UNIQUE NOT NULL,
    COUPON_YN CHAR(1) CONSTRAINT COUPON_YN_CK CHECK(COUPON_YN IN ('Y','N'))
);

CREATE TABLE COUPON( -- 쿠폰 테이블 생성
    COUPON_ID VARCHAR2(30) CONSTRAINT COUPON_ID_PK PRIMARY KEY,
    COUPON_NAME VARCHAR2(30) CONSTRAINT COUPON_NAME_UQ UNIQUE NOT NULL,
    COUPON_CODE VARCHAR2(30) CONSTRAINT COUPON_CODE_UQ UNIQUE NOT NULL,
    COUPON_COUNT NUMBER,
    COUPON_DATE DATE DEFAULT SYSDATE,
    COUPON_LIMITDATE DATE,
    COUPON_DISCOUNT NUMBER CONSTRAINT COUPON_DISCOUNT_NN NOT NULL
);


-- 각 컬럼에 주석

COMMENT ON COLUMN CATEGORY.CATEGORY_CODE IS '종류코드';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '종류이름';

COMMENT ON COLUMN PRODUCT.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN PRODUCT.CATEGORY_CODE IS '종류코드';
COMMENT ON COLUMN PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT.PRODUCT_DESCRIPTION IS '상품설명';
COMMENT ON COLUMN PRODUCT.PRODUCT_QUANTITY IS '상품수량';

COMMENT ON COLUMN PAYMENT.ORDER_NO IS '주문번호';
COMMENT ON COLUMN PAYMENT.ORDER_CODE IS '주문고유코드';
COMMENT ON COLUMN PAYMENT.ORDER_DATE IS '주문날짜';
COMMENT ON COLUMN PAYMENT.ORDER_QUANTITY IS '주문수량';
COMMENT ON COLUMN PAYMENT.ORDER_PRICE IS '결제금액';
COMMENT ON COLUMN PAYMENT.USER_ID IS '회원아이디';
COMMENT ON COLUMN PAYMENT.PRODUCT_CODE IS '상품코드';

COMMENT ON COLUMN NOTICE.UC_NO IS '문의게시판번호';
COMMENT ON COLUMN NOTICE.UC_TITLE IS '게시판제목';
COMMENT ON COLUMN NOTICE.UC_WRITEDATE IS '게시판작성일';
COMMENT ON COLUMN NOTICE.ASK_DETAIL IS '문의내용';
COMMENT ON COLUMN NOTICE.ASK_COMMENT IS '답변내용';
COMMENT ON COLUMN NOTICE.USER_ID IS '회원아이디';
COMMENT ON COLUMN NOTICE.PRODUCT_CODE IS '상품코드';


COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.GENDER IS '회원성별';
COMMENT ON COLUMN MEMBER.USER_BIRTHDAY IS '회원생년월일';
COMMENT ON COLUMN MEMBER.USER_EMAIL IS '회원이메일';
COMMENT ON COLUMN MEMBER.USER_PHONE IS '회원전화번호';
COMMENT ON COLUMN MEMBER.USER_ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.USER_DELFLAG IS '회원탈퇴여부';
COMMENT ON COLUMN MEMBER.USER_DELETE_DATE IS '회원탈퇴일';
COMMENT ON COLUMN MEMBER.USER_GRADE IS '회원등급';
COMMENT ON COLUMN MEMBER.USER_ADDRESS IS '회원주소';
COMMENT ON COLUMN MEMBER.GRADE_ADMIN IS '관리자';
COMMENT ON COLUMN MEMBER.USER_COIN IS '도전코인';

COMMENT ON COLUMN COUPON.COUPON_ID IS '쿠폰아이디';
COMMENT ON COLUMN COUPON.COUPON_NAME IS '쿠폰이름';
COMMENT ON COLUMN COUPON.COUPON_CODE IS '쿠폰코드';
COMMENT ON COLUMN COUPON.COUPON_COUNT IS '쿠폰수량';
COMMENT ON COLUMN COUPON.COUPON_DATE IS '발급일자';
COMMENT ON COLUMN COUPON.COUPON_LIMITDATE IS '유효일자';
COMMENT ON COLUMN COUPON.COUPON_DISCOUNT IS '쿠폰할인값';

COMMENT ON COLUMN COUPON_MAPPING.USER_COUPON IS '쿠폰매핑아이디';
COMMENT ON COLUMN COUPON_MAPPING.USER_ID IS '회원아이디';
COMMENT ON COLUMN COUPON_MAPPING.COUPON_ID IS  '쿠폰아이디';
COMMENT ON COLUMN COUPON_MAPPING.COUPON_YN IS '쿠폰사용여부';


-- 제약조건 추가
ALTER TABLE NOTICE ADD CONSTRAINT MEMBER_UQ_ID FOREIGN KEY(USER_ID) REFERENCES MEMBER(USER_ID);
ALTER TABLE NOTICE ADD CONSTRAINT PRODUCT_UQ_CODE FOREIGN KEY(PRODUCT_CODE) REFERENCES PRODUCT(PRODUCT_CODE);
ALTER TABLE PRODUCT ADD CONSTRAINT CATEGORY_UQ_CODE FOREIGN KEY(CATEGORY_CODE) REFERENCES CATEGORY(CATEGORY_CODE);
ALTER TABLE PAYMENT ADD CONSTRAINT MEMBER_UQ_ID2 FOREIGN KEY(USER_ID) REFERENCES MEMBER(USER_ID);
ALTER TABLE PAYMENT ADD CONSTRAINT PRODUCT_UQ_CODE2  FOREIGN KEY(PRODUCT_CODE) REFERENCES PRODUCT(PRODUCT_CODE);
ALTER TABLE COUPON_MAPPING ADD CONSTRAINT MEMBER_UQ_ID3 FOREIGN KEY(USER_ID) REFERENCES MEMBER(USER_ID);
ALTER TABLE COUPON_MAPPING ADD CONSTRAINT MEMBER_NN_PWD FOREIGN KEY(COUPON_ID) REFERENCES COUPON(COUPON_ID);


-- 임시 멤버데이터추가
INSERT INTO MEMBER
VALUES ('admin', '1234', '관리자', 'F', '2000/12/12', 'admin@kh.or.kr', '010-1111-2222', '2022-02-10', 'N', null, 'MASTER', '서울시 강남구 역삼동', '관리자', null);
 
INSERT INTO MEMBER
VALUES ('user01', 'pass01', '홍길동', 'F', '2000/01/05', 'user01@kh.or.kr', '010-3333-2222', '2023-01-10', 'N', null, 'GOLD', '서울시 양천구 목동', null, 3);

INSERT INTO MEMBER
VALUES ('user02', 'pass02', '전제원', 'M', '2000/12/08', 'user02@kh.or.kr', '010-5555-7777', '2023-02-16', 'N', null, 'DIAMOND', '경기도 용인시 수지구', null, 5);

INSERT INTO MEMBER
VALUES ('user03', 'pass03', '여나은', 'F', '2003/08/23', 'user03@kh.or.kr', '010-2345-6543', '2024-09-10', 'N', null, 'GOLD', '서울시 성북구 보문로', null, 1);
 
INSERT INTO MEMBER
VALUES ('user04', 'pass04', '전제민', 'M', '2000/12/07', 'user04@kh.or.kr', '010-5539-8872', '2024-10-9', 'N', null, 'BRONZE', '경기도 남양주시 오남읍', null, 3);

INSERT INTO MEMBER
VALUES ('user05', 'pass05', '안성재', 'M', '2001/05/19', 'user05@kh.or.kr', '010-1324-5768', '2022-09-16', 'N', null, 'BRONZE', '경기도 시흥시 정왕동', null, 4);

--임시 카테고리 추가
INSERT INTO CATEGORY
VALUES (1, '과일');

INSERT INTO CATEGORY
VALUES (2, '육류');

INSERT INTO CATEGORY
VALUES (3, '생선');

INSERT INTO CATEGORY
VALUES (4, '과자');

--임시 상품추가
INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE01', '1', '제천꿀사과', 10000, '달고 맛있는 제천 사과', 30);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE02', '2', '평창한우', 50000, '마블링이 살아 있는 한우', 20);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE03', '3', '속초오징어', 20000, '쫄깃쫄깃한 오징어', 30);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE04', '1', '남양주먹골배', 8000, '달디달고달디달고달디단 먹골배', 20);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE05', '2', '제주도흑돼지', 25000, '부드러운 식감의 돼지고기', 10);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE06', '3', '대구대구', 30000, '대구산 대구', 10);

INSERT INTO PRODUCT (PRODUCT_CODE, CATEGORY_CODE, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DESCRIPTION, PRODUCT_QUANTITY)
VALUES ('PRCODE07', '4', '새우깡', 2000, '대한민국 국민 안주', 30);


-- 임시 주문내역추가
INSERT INTO PAYMENT (ORDER_DATE, ORDER_NO, PRODUCT_CODE, PRODUCT_NAME, ORDER_QUANTITY, ORDER_PRICE, USER_ID, DELIVERY_STATUS, PAYMENT_METHOD, ORDER_CODE)
VALUES (
    SYSDATE,  -- ORDER_DATE
    000001,  -- ORDER_NO
    'PRCODE02',
    (SELECT PRODUCT_NAME FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE02'),  -- PRODUCT_NAME
    2,  -- ORDER_QUANTITY
    (SELECT PRODUCT_PRICE * 2 FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE02'),  -- ORDER_PRICE
    'user01',  -- USER_ID
    '배송준비중',  -- DELIVERY_STATUS
    '토스페이',  -- PAYMENT_METHOD
    'PAY01'
);

INSERT INTO PAYMENT (ORDER_DATE, ORDER_NO, PRODUCT_CODE, PRODUCT_NAME, ORDER_QUANTITY, ORDER_PRICE, USER_ID, DELIVERY_STATUS, PAYMENT_METHOD, ORDER_CODE)
VALUES (
    SYSDATE,  -- ORDER_DATE
    000002,  -- ORDER_NO
    'PRCODE01',
    (SELECT PRODUCT_NAME FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE01'),  -- PRODUCT_NAME
    5,  -- ORDER_QUANTITY
    (SELECT PRODUCT_PRICE * 5 FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE01'),  -- ORDER_PRICE
    'user01',  -- USER_ID
    '배송완료',  -- DELIVERY_STATUS
    '토스페이',  -- PAYMENT_METHOD
    'PAY02'
);

INSERT INTO PAYMENT (ORDER_DATE, ORDER_NO, PRODUCT_CODE, PRODUCT_NAME, ORDER_QUANTITY, ORDER_PRICE, USER_ID, DELIVERY_STATUS, PAYMENT_METHOD, ORDER_CODE)
VALUES (
    SYSDATE,  -- ORDER_DATE
    000003,  -- ORDER_NO
    'PRCODE03',
    (SELECT PRODUCT_NAME FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE03'),  -- PRODUCT_NAME
    3,  -- ORDER_QUANTITY
    (SELECT PRODUCT_PRICE * 3 FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE03'),  -- ORDER_PRICE
    'user01',  -- USER_ID
    '배송준비중',  -- DELIVERY_STATUS
    '토스페이',  -- PAYMENT_METHOD
    'PAY03'
);

INSERT INTO PAYMENT (ORDER_DATE, ORDER_NO, PRODUCT_CODE, PRODUCT_NAME, ORDER_QUANTITY, ORDER_PRICE, USER_ID, DELIVERY_STATUS, PAYMENT_METHOD, ORDER_CODE)
VALUES (
    SYSDATE,  -- ORDER_DATE
    000004,  -- ORDER_NO
    'PRCODE04',
    (SELECT PRODUCT_NAME FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE05'),  -- PRODUCT_NAME
    3,  -- ORDER_QUANTITY
    (SELECT PRODUCT_PRICE * 3 FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE05'),  -- ORDER_PRICE
    'user02',  -- USER_ID
    '결제완료',  -- DELIVERY_STATUS
    '토스페이',  -- PAYMENT_METHOD
    'PAY04'
);

INSERT INTO PAYMENT (ORDER_DATE, ORDER_NO, PRODUCT_CODE, PRODUCT_NAME, ORDER_QUANTITY, ORDER_PRICE, USER_ID, DELIVERY_STATUS, PAYMENT_METHOD, ORDER_CODE)
VALUES (
    SYSDATE,  -- ORDER_DATE
    000005,  -- ORDER_NO
    'PRCODE05',
    (SELECT PRODUCT_NAME FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE04'),  -- PRODUCT_NAME
    3,  -- ORDER_QUANTITY
    (SELECT PRODUCT_PRICE * 3 FROM PRODUCT WHERE PRODUCT_CODE = 'PRCODE04'),  -- ORDER_PRICE
    'user03',  -- USER_ID
    '배송완료',  -- DELIVERY_STATUS
    '토스페이',  -- PAYMENT_METHOD
    'PAY05'
);

COMMIT;